<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>EVENGE</title>
 <link href="http://evenge.github.io/" rel="self"/>
 <link href="http://evenge.github.io"/>
 <updated>2014-12-18T13:50:49+01:00</updated>
 <id>http://evenge.github.io</id>
 <author>
   <name>Evenge</name>
   <email>desarrollo.evenge@gmail.com</email>
 </author>

 
 <entry>
   <title>Uso de WebApp2 y Jinja2</title>
   <link href="http://evenge.github.io/general/2014/12/16/uso-de-webapp2-y-jinja2"/>
   <updated>2014-12-16T00:00:00+01:00</updated>
   <id>http://evenge.github.io/general/2014/12/16/uso-de-webapp2-y-jinja2</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://webapp-improved.appspot.com/&quot;&gt;WeppApp2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tras darle muchas vueltas y deliberar, nos decidimos por usar el framework ‘Webapp2’, ya que al ser una aplicación medianamente sencilla, sin mucha carga, este framework nos facilitaría mucho su desarrollo. Ya que resultaba mucho más sencillo usar que ‘Django’.
Además por lo leido, era ideal para sistemas virtualizados, así como para GAE.
Como nosotros ibamos a programar en Python nos venia genial, porque ya viene integrado en el SDK de App Engine.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jinja.pocoo.org/docs/dev/&quot;&gt;&lt;img src=&quot;http://www.pocoo.org/_images/jinja-logo.png&quot; alt=&quot;JINJA&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;También nos decidimos por usar Jinja2, que es una librería que nos permitia renderizar script en Python a una salida HTML de una forma muy simple y sencilla de aprender, es decir, saber estilo de python.&lt;/p&gt;

&lt;p&gt;Lo primero que encontramos en su documentación es que Jinaj2 está inspirado en el sistema de plantillas de Django.&lt;/p&gt;

&lt;p&gt;Jinja2 basicamente es un motor de plantillas que incorpora todas las funciones de Python.
Tiene soporte completo unicode, un entorno de ejecución y seguridad incorporada.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Test unitarios para python</title>
   <link href="http://evenge.github.io/test/2014/12/16/test-unitarios-para-python"/>
   <updated>2014-12-16T00:00:00+01:00</updated>
   <id>http://evenge.github.io/test/2014/12/16/test-unitarios-para-python</id>
   <content type="html">
&lt;p&gt;Los test unitarios nos permiten realizar un testeo de nuestra aplicación web durante el desarrollo de los distintos módulos de una aplicación, que nos ayuda a testear el código, nos ayuda en el diseño del proyecto, así como la reutilización y mantenimiento del código. Todo ello a nivel local, sin la necesidad de desplegarla en App Engine.&lt;/p&gt;

&lt;p&gt;Para ello hemos tomado como referencia:
&lt;a href=&quot;https://cloud.google.com/appengine/docs/python/tools/localunittesting&quot;&gt;Local Unit Testing for Python&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Test</title>
   <link href="http://evenge.github.io/test/2014/12/16/test"/>
   <updated>2014-12-16T00:00:00+01:00</updated>
   <id>http://evenge.github.io/test/2014/12/16/test</id>
   <content type="html">
&lt;p&gt;Tras mucha investigación de como hacer los test unitarios sobre nuestra aplicación en GAE, hemos conseguido realizarlos con éxito.  &lt;/p&gt;

&lt;p&gt;Para ello hemos tenido que usar bastante información buscada por Internet, por lo que hemos tomado como referencia:  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/appengine/docs/python/tools/localunittesting&quot;&gt;Local Unit Testing for Python&lt;/a&gt;  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/appengine/docs/python/tools/handlertesting&quot;&gt;Handler Testing For Python&lt;/a&gt;  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.shippable.com/en/latest/&quot;&gt;API Shippable&lt;/a&gt;  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9511887/webtest-for-google-app-engine&quot;&gt;Stackoverflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nuestro test sirve para comprobar que nuestra apliacación se despliega correctamente y en caso de que sea así haga un “Deploy” de esta a GAE.&lt;/p&gt;

&lt;p&gt;Para poder realizar este test, es necesario la configuración de 3 archivos que se deben de incorporar al repositorio del proyecto. Son los siguientes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/evenge/EVENGE/blob/master/requirements.txt&quot;&gt;requeriments.txt&lt;/a&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;nose  
coverage  
NoseGAE  
WebTest  
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/evenge/EVENGE/blob/master/test.py&quot;&gt;test.py&lt;/a&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;import unittest
from google.appengine.ext import db
from google.appengine.ext import testbed
from index import Evenge

class EvengeTestCase(unittest.TestCase):
def setUp(self):
self.testbed = testbed.Testbed()
self.testbed.activate()
self.testbed.init_datastore_v3_stub()

def tearDown(self):
self.testbed.deactivate()

def test(self):
evenge = Evenge()
response = evenge.hazElCuadrado(4)
self.assertEqual(response,16)

if __name__ == &quot;__main__&quot;:
unittest.main()
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/evenge/EVENGE/blob/master/shippable.yml&quot;&gt;shippable.yaml&lt;/a&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;language: python

python:
- &quot;2.7&quot;

#Esto es para desplegar en App Engine
env:
global:
- GAE_DIR=/tmp/gae
- EMAIL=8macau8@gmail.com
- secure: RACsb1T9/QPr32TxNHaQ5yqq/EyWXSFIKlmmh633cvxygeBt7UJoM674Pqkg2RfwHN4XJ+lrC8s4FDffixbK4OXKr7aW0lNjLNcdPM/1NgZC1mimNGG+UOB1sAMkLUO909V+pMHq53f5oYb+s3aHFukq9zG5+d7+yNZ89bb+lX4ujhFjxMTltT8OOuQvzFwRkOoTH7CdfJDUqeF+MABCuzOFq1ewU6j0QqTi4DtZP4ZNNMA/8b0935U2tOdFlbQ8Xx1ZTm6UFrMGEJGlfRJAOKls20mXiF3wudYSXEw69PztNyJ2vg+WL7oE6xUobJHXOLIReevDm7KrmEC8p7Re4w==

#Instalarse la mágina virtual GAE
before_install:
- &amp;gt;
test -e $GAE_DIR ||
(mkdir -p $GAE_DIR &amp;amp;&amp;amp;
wget https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.15.zip -q -O /tmp/gae.zip &amp;amp;&amp;amp;
unzip /tmp/gae.zip -d $GAE_DIR)
#Instalar requerimientos
install:
- pip install -r requirements.txt

before_script:
- echo &#39;Europe/Madrid&#39; | sudo tee /etc/timezone
- sudo dpkg-reconfigure --frontend noninteractive tzdata
- mkdir -p shippable/testresults
- mkdir -p shippable/codecoverage

#Ejecutamos el script
script:
- &amp;gt;
nosetests test.py
--with-gae --without-sandbox --gae-lib-root=$GAE_DIR/google_appengine
--with-xunit --xunit-file=shippable/testresults/test.xml
--with-coverage --cover-xml --cover-xml-file=shippable/codecoverage/coverage.xml
#Si se construye bien hacer esto
after_success:
- $GAE_DIR/google_appengine/appcfg.py --oauth2_access_token=$GAE_TOKEN update .
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El archivo más importante es “Shippable” que es el que se encarga de realizar el test
  con la ejecución del script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#Ejecutamos el script
script:
- &amp;gt;
nosetests test.py
--with-gae --without-sandbox --gae-lib-root=$GAE_DIR/google_appengine --with-xunit --xunit-file=shippable/testresults/test.xml --with-coverage --cover-xml --cover-xml-file=shippable/codecoverage/coverage.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cada archivo viene comentado con todo lo que hace.&lt;/p&gt;

&lt;p&gt;Estos test pueden ser usados por cualquiera, solo que deben de ser modificados para su correcto funcionamiento en su correspondiente aplicación.&lt;/p&gt;

&lt;p&gt;#Ejecutar el test#&lt;/p&gt;

&lt;p&gt;Antes de proceder a ejecutar el test debemos de estar logueados en &lt;a href=&quot;http://www.shippable.com/&quot;&gt;Shippable&lt;/a&gt; y haber autorizado a “Shippable” entrar en nuestro repositorio de “GitHub”.
  &lt;img src=&quot;http://i58.tinypic.com/2ros6ix.png&quot; alt=&quot;TEST&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez dentro de “Shippable”, nos encontramos con este panel, que nos muestra información del test:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i61.tinypic.com/saxj0w.png&quot; alt=&quot;TEST&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez realizado esto procedemos con con la ejecucion del test:&lt;/p&gt;

&lt;p&gt;Lo primero que debemos de hacer es un “push” al repositorio y seguidamente hacer un “commit”, entonces al realizar el “commit” es cuando se ejecuta el test, que lo ejecuta “shippable” ejecutando el script. Cuando termina de realizar el test nos muestra este log:
  &lt;img src=&quot;http://i58.tinypic.com/vwtp2x.png&quot; alt=&quot;TEST&quot; /&gt;
  Este log nos muestra el resultado del test, si ha habido algun error o fallo, asi como si esta todo bien, en esta caso esta bien y nos da “Passing”.&lt;/p&gt;

&lt;p&gt;En caso de que todo haya salido bien y nos encontremos en la rama master, se realiza un “Deploy” a GAE.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;after_success:
- if [ &quot;$BRANCH&quot; == &quot;master&quot; ]; then $GAE_DIR/google_appengine/appcfg.py --oauth2_refresh_token=$GAE_TOKEN update . ; else echo &quot;No deployment for this $BRANCH&quot;; fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://evenge-2014.appspot.com/&quot;&gt;Aplicación&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Nos decidimos por GAE</title>
   <link href="http://evenge.github.io/general/2014/12/16/nos-decidimos-por-gae"/>
   <updated>2014-12-16T00:00:00+01:00</updated>
   <id>http://evenge.github.io/general/2014/12/16/nos-decidimos-por-gae</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/&quot;&gt;&lt;img src=&quot;http://cdn.pingwest.com/wp-content/uploads/2013/04/google-app-engine-logo.jpg&quot; alt=&quot;GAE&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tras darle muchas vueltas y buscar diferentes alternativas a la hora de la elección del PaaS, nos hemos decidido por GAE, ya que uno de nuestros integrantes ya había trabajo con el con anterioridad, y la verdad, que por lo que nos había hablado de GAE era una maravilla. Como todo, tiene sus incombenientes, pero siempre se pueden subsanar de alguna manera.&lt;/p&gt;

&lt;p&gt;GAE es un servicio que nos permite ejecutar nuestras aplicaciones web usando las infraestructuras de Google. A nosotros esta alternativa nos venia perfecta por el tipo de aplicación web que íbamos a desarrollar.&lt;/p&gt;

&lt;p&gt;GAE nos da soporte para diferentes tipo de lenguajes:
+ Python
+ Java
+ Go
+ PHP(incorporado hace poco tiempo)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.python.org/&quot;&gt;&lt;img src=&quot;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&quot; alt=&quot;Python&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nosotros nos decidimos por Python, ya que en la asignatura DAI, nos empezaron a enseñar, y ya que estábamos aprendiendo, que mejor manera de hacerlo que desarrollando nuestra aplicación web en dicho lenguaje. Ya que python es un lenguaje muy potente actualmente.&lt;/p&gt;

&lt;h3 id=&quot;algunas-de-las-caractersticas-ms-destacadas-de-gae&quot;&gt;Algunas de las características más destacadas de GAE:&lt;/h3&gt;

&lt;h4 id=&quot;almacenamiento-de-datos&quot;&gt;Almacenamiento de datos&lt;/h4&gt;

&lt;p&gt;GAE nos da una un servicio de almacenamiento de datos distribuido muy potente. Conforme nuestra aplicación va creciendo, nuestro almacén de datos también lo hace.&lt;/p&gt;

&lt;h4 id=&quot;servicios&quot;&gt;Servicios&lt;/h4&gt;

&lt;p&gt;GAE nos facilita la forma de administrar nuestra aplicación.
+ Correo
+ Mencache
+ Extracción de URL&lt;/p&gt;

&lt;h4 id=&quot;desarrollo-local&quot;&gt;Desarrollo local&lt;/h4&gt;

&lt;p&gt;GAE nos permite generar un entorno de desarrollo local exactamente igual que si fuese GAE en la nube. De esta manera podrás probar tus aplicaciones con toda seguridad antes de subirlas definitivamente.&lt;/p&gt;

&lt;h4 id=&quot;cron&quot;&gt;Cron&lt;/h4&gt;

&lt;p&gt;Además, nuestras aplicaciones pueden realizar tareas programadas según las configure el desarrollador.&lt;/p&gt;

&lt;h4 id=&quot;python&quot;&gt;Python&lt;/h4&gt;

&lt;p&gt;GAE nos permite como anteriormente he comentado, programar en Python. Además incluye varias API y herramientas de desarrollo muy fácil de usar.&lt;/p&gt;

&lt;h4 id=&quot;cuotas&quot;&gt;Cuotas&lt;/h4&gt;

&lt;p&gt;GAE es gratis, y te ofrecen 500MB de espacio para tu applicación y admite 5 millones de visitas mensuales.&lt;/p&gt;

&lt;h4 id=&quot;escalable&quot;&gt;Escalable&lt;/h4&gt;

&lt;p&gt;Es altamente escalable, es una de las características de GAE, así como la estabilidad y la seguridad.&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
